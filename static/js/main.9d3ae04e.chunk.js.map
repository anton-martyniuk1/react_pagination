{"version":3,"sources":["components/Pagination/Pagination.tsx","App.tsx","utils.ts","index.tsx"],"names":["Pagination","visibleItems","perPage","currentPage","onPageClick","onArrowClick","arrayOfPages","Array","from","_","i","isFirst","isLast","at","className","classNames","disabled","href","onClick","map","page","id","String","item","items","to","numbers","n","push","getNumbers","App","state","slice","selectedPageItems","itemsCount","pageLinks","selectedPage","total","length","numberOfVisibleItem","handleNewItems","setState","lastElement","setItemsPerPage","event","value","target","Math","ceil","selectPage","selectPageWithArrow","currentTarget","textContent","this","onChange","count","htmlFor","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.9d3ae04e.chunk.js","sourcesContent":["import classNames from 'classnames';\nimport React, { MouseEvent } from 'react';\n\ntype Props = {\n  visibleItems: string[],\n  perPage: number,\n  currentPage: number,\n  onPageClick: (page: number) => void,\n  onArrowClick: (event: MouseEvent<HTMLElement>) => void,\n};\n\nexport const Pagination: React.FC<Props> = ({\n  visibleItems,\n  perPage,\n  currentPage,\n  onPageClick,\n  onArrowClick,\n}) => {\n  const arrayOfPages = Array.from(Array(perPage), (_, i) => i + 1);\n  const isFirst = currentPage === arrayOfPages[0];\n  const isLast = currentPage === arrayOfPages.at(-1);\n\n  return (\n    <>\n      <ul className=\"pagination\">\n        <li className={classNames('page-item', { disabled: isFirst })}>\n          <a\n            data-cy=\"prevLink\"\n            className=\"page-link\"\n            href=\"#prev\"\n            aria-disabled={isFirst}\n            onClick={onArrowClick}\n          >\n            «\n          </a>\n        </li>\n\n        {arrayOfPages.map((page) => {\n          const handleChange = () => {\n            onPageClick(page);\n          };\n\n          return (\n            <li\n              className={`page-item ${currentPage !== page || 'active'}`}\n              key={page}\n            >\n              <a\n                id={String(page)}\n                data-cy=\"pageLink\"\n                className=\"page-link\"\n                href={`#${page}`}\n                onClick={handleChange}\n              >\n                {page}\n              </a>\n            </li>\n          );\n        })}\n\n        <li className={classNames('page-item', { disabled: isLast })}>\n          <a\n            data-cy=\"nextLink\"\n            className=\"page-link\"\n            href=\"#next\"\n            aria-disabled={isLast}\n            onClick={onArrowClick}\n          >\n            »\n          </a>\n        </li>\n      </ul>\n\n      <ul>\n        {visibleItems.map(item => (\n          <li data-cy=\"item\" key={item}>{item}</li>\n        ))}\n      </ul>\n    </>\n  );\n};\n","import React, { ChangeEvent, MouseEvent } from 'react';\nimport './App.css';\nimport { Pagination } from './components/Pagination';\nimport { getNumbers } from './utils';\n\ntype State = {\n  visibleItems: string[],\n  selectedPageItems: number,\n  itemsCount: number[],\n  pageLinks: number,\n  selectedPage: number,\n};\n\nconst items = getNumbers(1, 42)\n  .map(n => `Item ${n}`);\n\nexport class App extends React.Component<{}, State> {\n  state = {\n    visibleItems: items.slice(0, 5),\n    selectedPageItems: 5,\n    itemsCount: [3, 5, 10, 20],\n    pageLinks: 9,\n    selectedPage: 1,\n  };\n\n  total = items.length;\n\n  numberOfVisibleItem = `${this.state.visibleItems[0]} - ${this.state.visibleItems.at(-1)}`;\n\n  handleNewItems = () => {\n    this.setState(state => {\n      const { selectedPage, selectedPageItems } = state;\n      const lastElement = selectedPage * selectedPageItems;\n\n      return ({\n        visibleItems: items.slice(\n          lastElement - selectedPageItems,\n          lastElement,\n        ),\n      });\n    });\n  };\n\n  setItemsPerPage = (event: ChangeEvent<HTMLSelectElement>) => {\n    const { value } = event.target;\n\n    this.setState({\n      selectedPageItems: +value,\n      pageLinks: Math.ceil(items.length / +value),\n      selectedPage: 1,\n    });\n\n    this.handleNewItems();\n  };\n\n  selectPage = (page: number) => {\n    this.setState({ selectedPage: page });\n    this.handleNewItems();\n  };\n\n  selectPageWithArrow = (event: MouseEvent<HTMLElement>) => {\n    if (event.currentTarget.textContent === '«') {\n      this.setState(state => ({ selectedPage: state.selectedPage - 1 }));\n    } else {\n      this.setState(state => ({ selectedPage: state.selectedPage + 1 }));\n    }\n\n    this.handleNewItems();\n  };\n\n  render() {\n    const {\n      visibleItems,\n      itemsCount,\n      selectedPageItems,\n      pageLinks,\n      selectedPage,\n    } = this.state;\n\n    return (\n      <div className=\"container\">\n        <h1>Items with Pagination</h1>\n\n        <p className=\"lead\" data-cy=\"info\">\n          {`Page ${selectedPage} (items ${this.numberOfVisibleItem} of ${this.total})`}\n        </p>\n\n        <div className=\"form-group row\">\n          <div className=\"col-3 col-sm-2 col-xl-1\">\n            <select\n              data-cy=\"perPageSelector\"\n              id=\"perPageSelector\"\n              className=\"form-control\"\n              value={selectedPageItems}\n              onChange={this.setItemsPerPage}\n            >\n              {itemsCount.map(count => (\n                <option key={count} value={count}>\n                  {count}\n                </option>\n              ))}\n            </select>\n          </div>\n\n          <label htmlFor=\"perPageSelector\" className=\"col-form-label col\">\n            items per page\n          </label>\n        </div>\n\n        <Pagination\n          visibleItems={visibleItems}\n          perPage={pageLinks}\n          currentPage={selectedPage}\n          onPageClick={this.selectPage}\n          onArrowClick={this.selectPageWithArrow}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","export function getNumbers(from: number, to: number): number[] {\n  const numbers = [];\n\n  for (let n = from; n <= to; n += 1) {\n    numbers.push(n);\n  }\n\n  return numbers;\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}